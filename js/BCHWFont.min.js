(function(b){var a=function(){this.width=1;this.color=new BCHWColor.createRGBAColor();this.thickness=1;this.roundedRect};a.prototype.renderFunction=function(c,d){};a.prototype.renderToContext=function(c){this.renderFunction(c,this)};a.prototype.addRandomness=function(c,d){this.roundedRect.x+=BCHWMathUtil.getRandomNumberInRange(-c,c);this.roundedRect.y+=BCHWMathUtil.getRandomNumberInRange(-c,c);this.roundedRect.scaleX(1+BCHWMathUtil.getRandomNumberInRange(-d,d));this.roundedRect.scaleY(1+BCHWMathUtil.getRandomNumberInRange(-d,d))};a.createBCHWFontCharacter=function(g,d,h,e,c){var f=new a();f.color=d;f.lineColor=h;f.thickness=e;f.roundedRect=c;var i=BCHWFontCharacterRenderer.getRenderFunction(g);if(i){f.renderFunction=i}f.width=BCHWFontCharacterRenderer.getCharacterWidthPercent(g);return f};b.BCHWFontCharacter=a}(window));(function(b){var a=function(){};a.renderRoundedRectToContext=function(c,d){c.beginPath();c.lineWidth=d.thickness;c.fillStyle=d.color.getCanvasColorString();c.strokeStyle=d.lineColor.getCanvasColorString();c.moveTo(d.roundedRect.x,d.roundedRect.y+d.roundedRect.radius);c.lineTo(d.roundedRect.x,d.roundedRect.y+d.roundedRect.height-d.roundedRect.radius);c.quadraticCurveTo(d.roundedRect.x,d.roundedRect.y+d.roundedRect.height,d.roundedRect.x+d.roundedRect.radius,d.roundedRect.y+d.roundedRect.height);c.lineTo(d.roundedRect.x+d.roundedRect.width-d.roundedRect.radius,d.roundedRect.y+d.roundedRect.height);c.quadraticCurveTo(d.roundedRect.x+d.roundedRect.width,d.roundedRect.y+d.roundedRect.height,d.roundedRect.x+d.roundedRect.width,d.roundedRect.y+d.roundedRect.height-d.roundedRect.radius);c.lineTo(d.roundedRect.x+d.roundedRect.width,d.roundedRect.y+d.roundedRect.radius);c.quadraticCurveTo(d.roundedRect.x+d.roundedRect.width,d.roundedRect.y,d.roundedRect.x+d.roundedRect.width-d.roundedRect.radius,d.roundedRect.y);c.lineTo(d.roundedRect.x+d.roundedRect.radius,d.roundedRect.y);c.quadraticCurveTo(d.roundedRect.x,d.roundedRect.y,d.roundedRect.x,d.roundedRect.y+d.roundedRect.radius);c.fill();c.stroke()};a.getRenderFunction=function(c){if(!c||c==undefined){return null}switch(c.toLowerCase()){case"b":case"c":case"e":case"f":case"g":case"h":case"i":case"m":case"o":case"r":case"s":case"t":case"u":case"w":case"y":return a["render"+c.toUpperCase()];break}return null};a.getCharacterWidthPercent=function(d){var c=1;if(!d||d==undefined){return c}switch(d.toLowerCase()){case"b":c=1;break;case"c":c=0.9;break;case"e":c=0.8;break;case"f":c=0.8;break;case"g":c=0.9;break;case"h":c=0.9;break;case"i":c=0.5;break;case"m":c=1.2;break;case"o":c=0.9;break;case"r":c=1;break;case"s":c=0.8;break;case"t":c=1;break;case"u":c=0.9;break;case"w":c=1.2;break;case"y":c=1;break}return c};a.renderB=function(e,f){a.renderRoundedRectToContext(e,f);e.beginPath();e.lineWidth=f.thickness;e.strokeStyle=f.lineColor.getCanvasColorString();var d=f.roundedRect.x+f.roundedRect.width;var c=f.roundedRect.y+f.roundedRect.height/2;e.moveTo(d,c);e.lineTo(d-f.roundedRect.width/4,c);var g=f.roundedRect.height/4;e.moveTo(f.roundedRect.x+f.roundedRect.width/2,f.roundedRect.y+g);e.lineTo(f.roundedRect.x+f.roundedRect.width/2+f.roundedRect.width/4,f.roundedRect.y+g);e.moveTo(f.roundedRect.x+f.roundedRect.width/2,f.roundedRect.y+g*3);e.lineTo(f.roundedRect.x+f.roundedRect.width/2+f.roundedRect.width/4,f.roundedRect.y+g*3);e.stroke()};a.renderC=function(e,f){a.renderRoundedRectToContext(e,f);e.beginPath();e.lineWidth=f.thickness;e.strokeStyle=f.lineColor.getCanvasColorString();var d=f.roundedRect.x+f.roundedRect.width;var c=f.roundedRect.y+f.roundedRect.height/2;var h=f.roundedRect.x+f.roundedRect.width/2;e.moveTo(d,c);e.lineTo(h,c);var g=f.roundedRect.height/4;e.moveTo(h,f.roundedRect.y+g);e.lineTo(h,f.roundedRect.y+g*3);e.stroke()};a.renderE=function(e,f){a.renderRoundedRectToContext(e,f);e.beginPath();e.lineWidth=f.thickness;e.strokeStyle=f.lineColor.getCanvasColorString();var d=f.roundedRect.x+f.roundedRect.width;var c=f.roundedRect.width/4;var g=f.roundedRect.height/3;e.moveTo(d,f.roundedRect.y+g);e.lineTo(d-c,f.roundedRect.y+g);e.moveTo(d,f.roundedRect.y+g*2);e.lineTo(d-c,f.roundedRect.y+g*2);e.stroke()};a.renderF=function(e,f){e.beginPath();e.lineWidth=f.thickness;e.fillStyle=f.color.getCanvasColorString();e.strokeStyle=f.lineColor.getCanvasColorString();var h=f.roundedRect.width/3;var g=f.roundedRect.height/3;var d=f.roundedRect.x+f.roundedRect.width;var c=f.roundedRect.y+f.roundedRect.height;e.moveTo(f.roundedRect.x,f.roundedRect.y+f.roundedRect.radius);e.lineTo(f.roundedRect.x,c-f.roundedRect.radius);e.quadraticCurveTo(f.roundedRect.x,c,f.roundedRect.x+f.roundedRect.radius,f.roundedRect.y+f.roundedRect.height);e.lineTo(f.roundedRect.x+h*2-f.roundedRect.radius,c);e.quadraticCurveTo(f.roundedRect.x+h*2,c,f.roundedRect.x+h*2,c-f.roundedRect.radius);e.lineTo(f.roundedRect.x+h*2,c-g);e.lineTo(d-f.roundedRect.radius,c-g);e.quadraticCurveTo(d,c-g,d,c-g-f.roundedRect.radius);e.lineTo(f.roundedRect.x+f.roundedRect.width,f.roundedRect.y+f.roundedRect.radius);e.quadraticCurveTo(f.roundedRect.x+f.roundedRect.width,f.roundedRect.y,f.roundedRect.x+f.roundedRect.width-f.roundedRect.radius,f.roundedRect.y);e.lineTo(f.roundedRect.x+f.roundedRect.radius,f.roundedRect.y);e.quadraticCurveTo(f.roundedRect.x,f.roundedRect.y,f.roundedRect.x,f.roundedRect.y+f.roundedRect.radius);e.fill();e.stroke();e.beginPath();e.lineWidth=f.thickness;e.strokeStyle=f.lineColor.getCanvasColorString();e.moveTo(d,f.roundedRect.y+g);e.lineTo(d-h,f.roundedRect.y+g);e.stroke()};a.renderG=function(f,h){a.renderRoundedRectToContext(f,h);f.beginPath();f.lineWidth=h.thickness;f.strokeStyle=h.lineColor.getCanvasColorString();var e=h.roundedRect.x+h.roundedRect.width;var g=h.roundedRect.x+h.roundedRect.width/2;var d=h.roundedRect.y+h.roundedRect.height/1.8;var c=h.roundedRect.width/4;var i=h.roundedRect.height/4;f.moveTo(e,d);f.lineTo(g,d);f.lineTo(g,d+i);f.lineTo(g+c,d+i);f.stroke()};a.renderH=function(c,e){a.renderRoundedRectToContext(c,e);c.beginPath();c.lineWidth=e.thickness;c.strokeStyle=e.lineColor.getCanvasColorString();var d=e.roundedRect.x+e.roundedRect.width/2;var f=e.roundedRect.height/4;c.moveTo(d,e.roundedRect.y);c.lineTo(d,e.roundedRect.y+f);c.moveTo(d,e.roundedRect.y+e.roundedRect.height);c.lineTo(d,e.roundedRect.y+e.roundedRect.height-f);c.stroke()};a.renderI=function(c,d){a.renderRoundedRectToContext(c,d)};a.renderM=function(c,d){a.renderRoundedRectToContext(c,d);c.beginPath();c.lineWidth=d.thickness;c.strokeStyle=d.lineColor.getCanvasColorString();var e=d.roundedRect.height/3;var f=d.roundedRect.width/3;c.moveTo(d.roundedRect.x+f,d.roundedRect.getBottom());c.lineTo(d.roundedRect.x+f,d.roundedRect.getBottom()-e);c.moveTo(d.roundedRect.x+f*2,d.roundedRect.getBottom());c.lineTo(d.roundedRect.x+f*2,d.roundedRect.getBottom()-e);c.stroke()};a.renderO=function(c,e){a.renderRoundedRectToContext(c,e);c.beginPath();c.lineWidth=e.thickness;c.strokeStyle=e.lineColor.getCanvasColorString();var d=e.roundedRect.x+e.roundedRect.width/2;var f=e.roundedRect.height/3;c.moveTo(d,e.roundedRect.y+f);c.lineTo(d,e.roundedRect.y+f*2);c.stroke()};a.renderR=function(f,g){a.renderRoundedRectToContext(f,g);f.beginPath();f.lineWidth=g.thickness;f.strokeStyle=g.lineColor.getCanvasColorString();var e=g.roundedRect.x+g.roundedRect.width;var d=g.roundedRect.y+g.roundedRect.height/2;f.moveTo(e,d);f.lineTo(e-g.roundedRect.width/4,d);var h=g.roundedRect.height/4;f.moveTo(g.roundedRect.x+g.roundedRect.width/2,g.roundedRect.y+h);f.lineTo(g.roundedRect.x+g.roundedRect.width/2+g.roundedRect.width/4,g.roundedRect.y+h);var c=g.roundedRect.x+g.roundedRect.width/2;f.moveTo(c,g.roundedRect.getBottom()-h);f.lineTo(c,g.roundedRect.getBottom());f.stroke()};a.renderS=function(d,e){a.renderRoundedRectToContext(d,e);d.beginPath();d.lineWidth=e.thickness;d.strokeStyle=e.lineColor.getCanvasColorString();var c=e.roundedRect.x+e.roundedRect.width;var g=e.roundedRect.width/3;var f=e.roundedRect.height/3;d.moveTo(c,e.roundedRect.y+f);d.lineTo(c-g,e.roundedRect.y+f);d.moveTo(e.roundedRect.x,e.roundedRect.y+f*2);d.lineTo(e.roundedRect.x+g,e.roundedRect.y+f*2);d.stroke()};a.renderT=function(f,h){f.beginPath();f.lineWidth=h.thickness;f.fillStyle=h.color.getCanvasColorString();f.strokeStyle=h.lineColor.getCanvasColorString();var g=h.roundedRect;var c=h.roundedRect.radius;var j=g.width/3;var i=g.height/3;var e=g.x+g.width;var d=g.y+g.height;f.moveTo(g.x,g.y+c);f.lineTo(g.x,d-i-c);f.quadraticCurveTo(g.x,d-i,g.x+c,d-i);f.lineTo(g.x+j-c,d-i);f.quadraticCurveTo(g.x+j,d-i,g.x+j,d-i+c);f.lineTo(g.x+j,d-c);f.quadraticCurveTo(g.x+j,d,g.x+j+c,d);f.lineTo(g.x+j*2-c,d);f.quadraticCurveTo(g.x+j*2,d,g.x+j*2,d-c);f.lineTo(g.x+j*2,d-i+c);f.quadraticCurveTo(g.x+j*2,d-i,g.x+j*2+c,d-i);f.lineTo(e-c,d-i);f.quadraticCurveTo(e,d-i,e,d-i-c);f.lineTo(e,g.y+c);f.quadraticCurveTo(e,g.y,e-c,g.y);f.lineTo(g.x+c,g.y);f.quadraticCurveTo(g.x,g.y,g.x,g.y+c);f.fill();f.stroke()};a.renderU=function(c,e){a.renderRoundedRectToContext(c,e);c.beginPath();c.lineWidth=e.thickness;c.strokeStyle=e.lineColor.getCanvasColorString();var d=e.roundedRect.x+e.roundedRect.width/2;var f=e.roundedRect.height/4;c.moveTo(d,e.roundedRect.y);c.lineTo(d,e.roundedRect.y+f);c.stroke()};a.renderW=function(c,d){a.renderRoundedRectToContext(c,d);c.beginPath();c.lineWidth=d.thickness;c.strokeStyle=d.lineColor.getCanvasColorString();var e=d.roundedRect.height/3;var f=d.roundedRect.width/3;c.moveTo(d.roundedRect.x+f,d.roundedRect.y);c.lineTo(d.roundedRect.x+f,d.roundedRect.y+e);c.moveTo(d.roundedRect.x+f*2,d.roundedRect.y);c.lineTo(d.roundedRect.x+f*2,d.roundedRect.y+e);c.stroke()};a.renderY=function(d,h){d.beginPath();d.lineWidth=h.thickness;d.fillStyle=h.color.getCanvasColorString();d.strokeStyle=h.lineColor.getCanvasColorString();var j=h.roundedRect;var i=h.roundedRect.radius;var f=j.width/3;var g=j.height/3;var l=j.x+j.width;var c=j.y+j.height;d.moveTo(j.x,j.y+i);d.lineTo(j.x,c-g-i);d.quadraticCurveTo(j.x,c-g,j.x+i,c-g);d.lineTo(j.x+f-i,c-g);d.quadraticCurveTo(j.x+f,c-g,j.x+f,c-g+i);d.lineTo(j.x+f,c-i);d.quadraticCurveTo(j.x+f,c,j.x+f+i,c);d.lineTo(j.x+f*2-i,c);d.quadraticCurveTo(j.x+f*2,c,j.x+f*2,c-i);d.lineTo(j.x+f*2,c-g+i);d.quadraticCurveTo(j.x+f*2,c-g,j.x+f*2+i,c-g);d.lineTo(l-i,c-g);d.quadraticCurveTo(l,c-g,l,c-g-i);d.lineTo(l,j.y+i);d.quadraticCurveTo(l,j.y,l-i,j.y);d.lineTo(j.x+i,j.y);d.quadraticCurveTo(j.x,j.y,j.x,j.y+i);d.fill();d.stroke();d.beginPath();d.lineWidth=h.thickness;d.strokeStyle=h.lineColor.getCanvasColorString();var k=j.x+j.width/2;var e=j.height/4;d.moveTo(k,j.y);d.lineTo(k,j.y+e);d.stroke()};b.BCHWFontCharacterRenderer=a}(window));